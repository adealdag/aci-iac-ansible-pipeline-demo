# Networking CICD Pipeline with pre-change validation powered by Nexus Dashboard
name: pipeline-prod

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events on the prod branch
  pull_request:
    branches: [prod]

# Environment variables
env:
  IG_NAME: dc_spain
  SITE_NAME: MLG01
  PYTHONWARNINGS: "ignore:Unverified HTTPS request"

jobs:
  # Run ansible dry-run using check mode. Result is uploaded as artifact
  ansible-dry-run:
    runs-on: self-hosted
    container: adealdag/ansible:latest

    steps:
      - uses: actions/checkout@v2

      - name: Run ansible playbook dry-run
        env:
          VAULT_KEY: ${{ secrets.VAULT_KEY }}
        run: |
          ansible --version
          echo $VAULT_KEY > vault.key
          ansible-playbook -i inventory.yaml --vault-password-file vault.key deploy.yaml --check
          rm vault.key
        working-directory: playbooks

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: config-dump
          path: playbooks/dryrun_data.json

  # Run pre-change validation on Nexus Dashboard Insights. Uses the artifact saved previously
  pre-change-validation:
    runs-on: self-hosted
    needs: ansible-dry-run
    container: adealdag/python:3.9.10-mod

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: config-dump

      - name: Transform dry-run output to aci config
        run: |
          python ./tools/dryrun_to_config/py_dryrun_to_config.py --input dryrun_data.json --output config.json --loglevel INFO

      - name: Run pre-change validation on Nexus Dashboard Insights
        uses: adealdag/actions-ndi-prechange-validation@master
        with:
          ndHost: ${{ secrets.ND_HOST }}
          ndUsername: ${{ secrets.ND_USERNAME }}
          ndPassword: ${{ secrets.ND_PASSWORD }}
          ndDomain: ${{ secrets.ND_DOMAIN }}
          pcvName: ${{ github.sha }}
          igName: ${{ env.IG_NAME }}
          site: ${{ env.SITE_NAME }}
          file: ./config.json
          logLevel: INFO
          allowUnsupportedObjectModification: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NO_PROXY: ${{ secrets.ND_HOST }}, $NO_PROXY
